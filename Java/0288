package com.a;

import java.io.*;
import java.util.*;

public class FixedLengthAndVariableLengthToCSV {

    // 定义字段配置（字段名称和长度，固定长文件用）
    private static final String[][] FIXED_LENGTH_FIELD_CONFIG = {
        {"OrderSourceName", "3"},
        {"RequestDate", "10"},
        {"SerialNumber", "6"},
        {"ContractNumber", "10"},
        {"Segment1", "8"},
        {"ShipToName", "40"},
        {"ShipToDivision", "40"},
        {"OrigSysDocumentRef", "20"},
        {"IncidentNumber", "20"},
        {"OrderedInstructions", "60"},
        {"ShippingInstructions", "168"},
        {"OrderContact", "20"},
        {"CustomerTelNumber", "12"},
        {"ShipToAddressNum", "44"},
        {"ShipToBuilding", "40"},
        {"ShipToFloor", "6"},
        {"ShipToAddress", "100"},
        {"ItemId1", "14"},
        {"SalesQty1", "7"},
        {"ItemId2", "14"},
        {"SalesQty2", "7"},
        {"ItemId3", "14"},
        {"SalesQty3", "7"},
        {"ItemId4", "14"},
        {"SalesQty4", "7"},
        {"ItemId5", "14"},
        {"SalesQty5", "7"},
        {"ItemId6", "14"},
        {"SalesQty6", "7"},
        {"ItemId7", "14"},
        {"SalesQty7", "7"},
        {"ItemId8", "14"},
        {"SalesQty8", "7"},
        {"ItemId9", "14"},
        {"SalesQty9", "7"},
        {"ItemId10", "14"},
        {"SalesQty10", "7"},
        {"ItemId11", "14"},
        {"SalesQty11", "7"},
        {"ItemId12", "14"},
        {"SalesQty12", "7"},
        {"ItemId13", "14"},
        {"SalesQty13", "7"},
        {"ItemId14", "14"},
        {"SalesQty14", "7"},
        {"ItemId15", "14"},
        {"SalesQty15", "7"},
        {"ItemId16", "14"},
        {"SalesQty16", "7"},
        {"ItemId17", "14"},
        {"SalesQty17", "7"},
        {"ItemId18", "14"},
        {"SalesQty18", "7"},
        {"ItemId19", "14"},
        {"SalesQty19", "7"},
        {"ItemId20", "14"},
        {"SalesQty20", "7"}
    };

    // 可变长文件分隔符
    private static final String VARIABLE_LENGTH_SEPARATOR = "|";

    public static void main(String[] args) {
        String[] inputFiles = {
            "C:\\Users\\e-ls-dev-315\\Desktop\\0275\\0275.txt", // 示例文件路径
            "C:\\Users\\e-ls-dev-315\\Desktop\\0275\\0288.txt",
            "C:\\Users\\e-ls-dev-315\\Desktop\\0275\\0313.txt"
        };

        for (String inputFile : inputFiles) {
            String outputFile = inputFile + ".csv";  // 输出的 CSV 文件路径
            try {
                processFile(inputFile, outputFile);
                System.out.println("文件已成功转换为 CSV 文件：" + outputFile);
            } catch (IOException e) {
                System.err.println("文件处理过程中出错: " + e.getMessage());
            }
        }
    }

    public static void processFile(String inputFile, String outputFile) throws IOException {
        // 判断文件类型（根据文件名来判断）
        boolean isFixedLengthFile = isFixedLengthFile(inputFile);
        
        // 读取并处理文件
        if (isFixedLengthFile) {
            convertFixedLengthToCSV(inputFile, outputFile);
        } else {
            convertVariableLengthToCSV(inputFile, outputFile);
        }
    }

    // 判断文件类型，判断规则可以根据实际情况修改，这里用文件名后缀举例
    public static boolean isFixedLengthFile(String inputFile) {
        return !inputFile.contains("0288") && !inputFile.contains("0313") && !inputFile.contains("2704");
    }

    // 处理固定长文件
    public static void convertFixedLengthToCSV(String inputFile, String outputFile) throws IOException {
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile))) {

            // 写入 CSV 表头
            List<String> headers = new ArrayList<>();
            for (String[] field : FIXED_LENGTH_FIELD_CONFIG) {
                headers.add(field[0]);
            }
            headers.add("Empty_Check");
            writer.write(String.join(",", headers));
            writer.newLine();

            // 逐行读取文件并处理
            String line;
            while ((line = reader.readLine()) != null) {
                List<String> values = new ArrayList<>();
                boolean hasEmptyField = false;

                int start = 0;
                for (String[] field : FIXED_LENGTH_FIELD_CONFIG) {
                    int length = Integer.parseInt(field[1]);
                    String value = line.substring(start, Math.min(start + length, line.length())).trim();
                    values.add(value);

                    // 检查字段是否为空
                    if (value.isEmpty()) {
                        hasEmptyField = true;
                    }
                    start += length;
                }

                // 添加空值检查结果
                values.add(hasEmptyField ? "Yes" : "No");

                // 写入 CSV 行
                writer.write(String.join(",", values));
                writer.newLine();
            }
        }
    }

    // 处理可变长文件
    public static void convertVariableLengthToCSV(String inputFile, String outputFile) throws IOException {
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile))) {

            // 写入 CSV 表头（根据实际可变长字段结构定义）
            List<String> headers = new ArrayList<>();
            headers.add("Field1");
            headers.add("Field2");
            headers.add("Field3");
            headers.add("Empty_Check");
            writer.write(String.join(",", headers));
            writer.newLine();

            // 逐行读取文件并处理
            String line;
            while ((line = reader.readLine()) != null) {
                List<String> values = new ArrayList<>();
                String[] fields = line.split(VARIABLE_LENGTH_SEPARATOR);

                boolean hasEmptyField = false;
                for (String field : fields) {
                    values.add(field.trim());

                    // 检查字段是否为空
                    if (field.trim().isEmpty()) {
                        hasEmptyField = true;
                    }
                }

                // 添加空值检查结果
                values.add(hasEmptyField ? "Yes" : "No");

                // 写入 CSV 行
                writer.write(String.join(",", values));
                writer.newLine();
            }
        }
    }
}