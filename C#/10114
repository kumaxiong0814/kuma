能不能换成这种格式呢

foCode.ToLower() switch
        {
            "sea" => "10",
            "air" => "40",
            "truck" => "T",
            _ => foCode,
        };




private void HeaderFieldItemConvertion(ref Dictionary<string, object> data, IReadOnlyDictionary<string, string> convertCodeMap)
{
    // 三国間区分の変換を追加
    var trilateralType = dictionaryUtil.GetDataString(data, earth_dp_LS_BT_00271FLONE0004.TrilateralType);
    data[earth_dp_LS_BT_00271FLONE0004.TrilateralType] = trilateralType switch
    {
        "1" => "2",  // 1（D365側二国間）の場合 → 2（レガシー側二国間）
        "2" => "1",  // 2（D365側三国間）の場合 → 1（レガシー側三国間）
        _ => trilateralType  // 其他情况保持不变
    };
}

private void DetailFieldItemConvertion(ref Dictionary<string, object> data, IReadOnlyDictionary<string, string> convertCodeMap)
{
    // 有償無償区分の変換を追加
    var payFreeType = dictionaryUtil.GetDataString(data, earth_dp_LS_BT_00271FLONE0005.PayFreeType);
    data[earth_dp_LS_BT_00271FLONE0005.PayFreeType] = payFreeType switch
    {
        "0" => "N",  // 0（D365側有償）の場合 → N（レガシー側有償）
        "1" => "Y",  // 1（D365側無償）の場合 → Y（レガシー側無償）
        _ => payFreeType  // 其他情况保持不变
    };
}
private void HeaderFieldItemConvertion(ref Dictionary<string, object> data, IReadOnlyDictionary<string, string> convertCodeMap)
{
    // 取得三国間区分的值
    var trilateralType = dictionaryUtil.GetDataString(data, earth_dp_LS_BT_00271FLONE0004.TrilateralType);
    
    // 三国間区分の変換を追加
    data[earth_dp_LS_BT_00271FLONE0004.TrilateralType] = trilateralType switch
    {
        "1" => "2",  // 1（D365側二国間）の場合 → 2（レガシー側二国間）
        "2" => "1",  // 2（D365側三国間）の場合 → 1（レガシー側三国間）
        _ => trilateralType // 保持不变
    };
}

private void DetailFieldItemConvertion(ref Dictionary<string, object> data, IReadOnlyDictionary<string, string> convertCodeMap)
{
    // 取得有償無償区分的值
    var payFreeType = dictionaryUtil.GetDataString(data, earth_dp_LS_BT_00271FLONE0005.PayFreeType);
    
    // 有償無償区分の変換を追加
    data[earth_dp_LS_BT_00271FLONE0005.PayFreeType] = payFreeType switch
    {
        "0" => "N",  // 0（D365側有償）の場合 → N（レガシー側有償）
        "1" => "Y",  // 1（D365側無償）の場合 → Y（レガシー側無償）
        _ => payFreeType // 保持不变
    };
}

受注明細番号(輸出)OrderLineNumberの加工処理を追加 
是明细表earth_dp_LS_BT_00271FLONE0005里面的NO21字段
ーーー
受注番号（輸出）OrderNumber+桁数の限り0埋め+受注明細番号（輸出）　に加工する。
例.
受注番号（輸出）：0000000123 
受注明細番号（輸出）：1のとき、
設定値：00000001230000000000000000000001

private void DetailFieldItemConvertion(ref Dictionary<string, object> data, IReadOnlyDictionary<string, string> convertCodeMap)
{
    // 受注番号（輸出）OrderNumber + 桁数の限り0埋め + 受注明細番号（輸出）OrderLineNumber
    var orderNumber = dictionaryUtil.GetDataString(data, earth_dp_LS_BT_00271FLONE0005.OrderNumber); // 受注番号（輸出）
    var orderLineNumber = dictionaryUtil.GetDataString(data, earth_dp_LS_BT_00271FLONE0005.OrderLineNumber); // 受注明細番号（輸出）

    if (!string.IsNullOrEmpty(orderNumber) && !string.IsNullOrEmpty(orderLineNumber))
    {
        // NO21 字段的处理逻辑：OrderNumber + 受注明細番号（輸出）OrderLineNumber，桁数の限り0埋め
        var processedOrderLineNumber = orderNumber.PadLeft(32 - orderLineNumber.Length, '0') + orderLineNumber;
        
        // 更新 NO21 字段
        data[earth_dp_LS_BT_00271FLONE0005.NO21] = processedOrderLineNumber;
    }
}
